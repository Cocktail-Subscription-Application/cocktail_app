// after payment we get -
  // customer object
    // from this, we want to push the customer_id in the user
    // require the user model
      //find the user by email
      // then add the cutomer id inside
      // and save
    // redirect the customer to the profile page

// Subscription >> hard-coded at the moment


//////////////////////////// Deleted Code Snippets //////////////////////

// Passport used in auth.js /login route from online tutorial

router.post('/login', (req, res, next) => {
  passport.authenticate('local', {
    successRedirect: '/',
    failureRedirect: '/login',
  })( req, res, next);
})


// // isAuthenticated middleware
// const isAuthenticated = (req, res, next) => {
//   const { token } = req.headers;
//   const decoded = jwt.verify(token, 'cocktail-app-gael'); // jwt secret
//   const { email }= decoded;
//   User.findOne({email})
//   .then( user => {
//     next(null, user);
//   })
// }


// Cookie Session
//   const oneDay = 1000 * 60 * 60 * 24;
//   const cookie = cookieSession({
//     maxAge: oneDay,
//     keys: ['secret-key']
//   });

// router.use(cookie)


// const session = require("express-session");
// const cookieSession = require('cookie-session')

////////////// Refactoring Needed on the following places ////////////
29/JAN/2019
// the logout component clears the cookies set on the browser
  // Howver, the userprofile and the login page need to render on logout so that they dont't show the Logout button anymore
  // At the moment, it is done in a way so that userprofile and the logout component renders when they have token in the state
  // So, for them to rerender, we need to clear the token inside of the state
  // Currently we have a  cleartoken method defined in both login and userprofile which are passed as the props in the Logout in each of those component which IS NOT VERY DRY

//Logout props from home
export default function Home(props) {
  return (
    <>
      < Navbar/>
      <div id="home" style={{paddingTop: '40px'}}>
        <About />
        <HowItWorks/>
        <Register/>
        <Login {...this.props} />
      </div>
    </>
  )
}

// create cocktails
// backend route : http://localhost:5000/admin/users
